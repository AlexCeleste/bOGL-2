;----------------------------------------------------------------------------
; Filename OpenGL32.decls
; Rev 0.51 2012.09.06
;
;----------------------------------------------------------------------------
;
; OpenGL Direct for Blitz ( http://www.blitzbasic.com )
; Using OpenGl from Blitz without a wrapper DLL
;
; by Peter Scheutz
;
;----------------------------------------------------------------------------
;
; This file contains the Blitz UserLib for OpenGL32.dll, 
; It must be copied to you Userlib directory.
;
;----------------------------------------------------------------------------
;
; Copyright 1996 Silicon Graphics, Inc.
; All Rights Reserved.
;
; This is UNPUBLISHED PROPRIETARY SOURCE CODE of Silicon Graphics, Inc.;
; the contents of this file may Not be disclosed To third parties, copied Or
; duplicated in any form, in whole Or in part, without the prior written
; permission of Silicon Graphics, Inc.
;
; RESTRICTED RIGHTS LEGEND:
; Use, duplication Or disclosure by the Government is subject To restrictions
; as set forth in subdivision (c)(1)(ii) of the Rights in Technical Data
; And Computer Software clause at DFARS 252.227-7013, And/Or in similar Or
; successor clauses in the FAR, DOD Or NASA FAR Supplement. Unpublished -
; rights reserved under the Copyright Laws of the United States.
;
;----------------------------------------------------------------------------
;
;  Portions Copyright (c) 1985-1997, Microsoft Corp. All rights reserved.
;
;----------------------------------------------------------------------------


.lib "opengl32.dll"

;-Windows stuff--------------------------------------

wglCopyContext%(hGLRC%,hGLRC%,UINT%):"wglCopyContext"
wglCreateContext%(hDC%):"wglCreateContext"
wglCreateLayerContext%(hDC%,OGLint%):"wglCreateLayerContext"
wglDeleteContext%(hGLRC%):"wglDeleteContext"
wglGetCurrentContext%():"wglGetCurrentContext"
wglGetProcAddress%(lpStr$):"wglGetProcAddress"
wglMakeCurrent%(hDC%,HGLRC%):"wglMakeCurrent"
wglShareLists%(hDC%,HGLRC%):"wglShareLists"
wglSwapBuffers%(hDC%):"wglSwapBuffers"
wglUseFontBitmaps%(hDC%,var1%, var2%,var3%):"wglUseFontBitmapsA"
wglUseFontOutlines%(hDC%, var1% , var2% ,var3%, var4#, var5#, var6%, lpGLYPHMETRICSFLOAT*):"wglUseFontOutlinesA"
;wglDescribeLayerPlane"wglDescribeLayerPlane"     (ByVal hDC As Long, ByVal var1 As Long, ByVal var2 As Long, ByVal var3 As Dword, lpLAYERPLANEDESCRIPTOR As tagLAYERPLANEDESCRIPTOR) As Long
;wglSetLayerPaletteEntries"wglSetLayerPaletteEntries" (ByVal hDC As Long, ByVal var1 As Long, ByVal var2 As Long, ByVal var3 As Long, iCOLORREF As Long) As Long
;wglGetLayerPaletteEntries"wglGetLayerPaletteEntries" (ByVal hDC As Long, ByVal var1 As Long, ByVal var2 As Long, ByVal var3 As Long, iCOLORREF As Long) As Long
;wglRealizeLayerPalette"wglRealizeLayerPalette"    (ByVal hDC As Long, ByVal var1 As Long, ByVal var2 As Long) As Long
;wglSwapLayerBuffers"wglSwapLayerBuffers"       (ByVal hDC As Long, ByVal var1 As Dword) As Long
;wglSwapMultipleBuffers"wglSwapMultipleBuffers"    (ByVal var1 As Dword, var2 As WGLSWAP) As Dword


;-OpenGL--------------------------------------

glAccum ( op%, value#) :"glAccum"
glAlphaFunc( func%, ref#):"glAlphaFunc"
;glAreTexturesResident"( n%, textures%, residences%)As Byte
glArrayElement( i%):"glArrayElement"
glBegin( mode% ):"glBegin"
glBindTexture( ntarget%, texture% ):"glBindTexture"
glBitmap( nwidth%, height%, xorig#, yorig#, xmove#, ymove#, nbitmap% ):"glBitmap"
glBlendFunc( sfactor%, dfactor% ):"glBlendFunc"
glCallList( list% ):"glCallList"
glCallLists( n%, ntype%, lists* ):"glCallLists"
glClear( mask% ):"glClear"
glClearAccum( red#, green#, blue#, alpha# ):"glClearAccum"
glClearColor( red#, green#, blue#, alpha# ):"glClearColor"
Blitz_glClearDepth( depth_l%,depth_r% ):"glClearDepth"
glClearIndex( c# ):"glClearIndex"
glClearStencil( s% ):"glClearStencil"
glClipPlane( plane%, equation% ):"glClipPlane"
;glColor3b( red As Byte, green As Byte, blue As Byte ):"glColor3b"
glColor3bv( v% ):"glColor3bv"
;glColor3d( red As Double, green As Double, blue As Double ):"glColor3d"
glColor3dv( v% ):"glColor3dv"
glColor3f( red#, green#, blue# ):"glColor3f"
glColor3fv( v% ):"glColor3fv"
glColor3i( red%, green%, blue% ):"glColor3i"
glColor3iv( v% ):"glColor3iv"
glColor3s( red%, green%, blue% ):"glColor3s"
glColor3sv( v% ):"glColor3sv"
;glColor3ub( red As Byte, green As Byte, blue As Byte ):"glColor3ub"
glColor3ubv( v% ):"glColor3ubv"
glColor3ui( red%, green%, blue% ):"glColor3ui"
glColor3uiv( v% ):"glColor3uiv"
;glColor3us( red As Word, green As Word, blue As Word ):"glColor3us"
glColor3usv( v% ):"glColor3usv"
;glColor4b( red As Byte, green As Byte, blue As Byte, alpha As Byte ):"glColor4b"
glColor4bv( v% ):"glColor4bv"
;glColor4d( red As Double, green As Double, blue As Double, alpha As Double ):"glColor4d"
glColor4dv( v% ):"glColor4dv"
glColor4f( red#, green#, blue#, alpha# ):"glColor4f"
glColor4fv( v% ):"glColor4fv"
glColor4i( red%, green%, blue%, alpha% ):"glColor4i"
glColor4iv( v% ):"glColor4iv"
glColor4s( red%, green%, blue%, alpha% ):"glColor4s"
glColor4sv( v% ):"glColor4sv"
;glColor4ub( red As Byte, green As Byte, blue As Byte, alpha As Byte ):"glColor4ub"
glColor4ubv( v% ):"glColor4ubv"
glColor4ui( red%, green%, blue%, alpha% ):"glColor4ui"
glColor4uiv( v% ):"glColor4uiv"
;glColor4us( red As Word, green As Word, blue As Word, alpha As Word ):"glColor4us"
glColor4usv( v% ):"glColor4usv"
;glColorMask( red As Byte, green As Byte, blue As Byte, alpha As Byte ):"glColorMask"
glColorMask_Unsafe(r%, g%, b%, a%):"glColorMask"
glColorMaterial( face%, mode% ):"glColorMaterial"
glColorPointer( lsize%, ntype%, stride%, Pointer* ):"glColorPointer"
glCopyPixels( x%, y%, nwidth%, height%, ntype% ):"glCopyPixels"
glCopyTexImage1D( ntarget%, level%, internalFormat%, x%, y%, nwidth%, border% ):"glCopyTexImage1D"
glCopyTexImage2D( ntarget%, level%, internalFormat%, x%, y%, nwidth%, height%, border% ):"glCopyTexImage2D"
glCopyTexSubImage1D( ntarget%, level%, xoffset%, x%, y%, nwidth% ):"glCopyTexSubImage1D"
glCopyTexSubImage2D( ntarget%, level%, xoffset%, yoffset%, x%, y%, nwidth%, height% ):"glCopyTexSubImage2D"
glCullFace( mode% ):"glCullFace"
glDeleteLists( list%, range% ):"glDeleteLists"
glDeleteTextures( n%, textures* ):"glDeleteTextures"
glDepthFunc( func% ):"glDepthFunc"
;glDepthMask( flag As Byte ):"glDepthMask"
blitz_glDepthRange( zNear_l%,zNear_r%, zFar_l%,zFar_r% ):"glDepthRange"
glDisable( cap% ):"glDisable"
glDisableClientState( narray% ):"glDisableClientState"
glDrawArrays( mode%, First%, count% ):"glDrawArrays"
glDrawBuffer( mode% ):"glDrawBuffer"
glDrawElements( mode%, count%, ntype%, indices* ):"glDrawElements"
glDrawPixels( nwidth%, height%, nformat%, ntype%, npixels* ):"glDrawPixels"
;glEdgeFlag( flag As Byte ):"glEdgeFlag"
glEdgeFlagPointer( stride%, Pointer% ):"glEdgeFlagPointer"
;glEdgeFlagv( flag As Byte ):"glEdgeFlagv"
glEnable( cap% ):"glEnable"
glEnableClientState( narray% ):"glEnableClientState"
glEnd( ):"glEnd"
glEndList( ):"glEndList"
;glEvalCoord1d( u As Double ):"glEvalCoord1d"
;glEvalCoord1dv( u As Double ):"glEvalCoord1dv"
glEvalCoord1f( u# ):"glEvalCoord1f"
glEvalCoord1fv( u* ):"glEvalCoord1fv"
;glEvalCoord2d( u As Double, v As Double ):"glEvalCoord2d"
glEvalCoord2dv( u% ):"glEvalCoord2dv"
glEvalCoord2f( u#, v# ):"glEvalCoord2f"
glEvalCoord2fv( u% ):"glEvalCoord2fv"
glEvalMesh1( mode%, i1%, i2% ):"glEvalMesh1"
glEvalMesh2( mode%, i1%, i2%, j1%, j2% ):"glEvalMesh2"
glEvalPoint1( i% ):"glEvalPoint1"
glEvalPoint2( i%, j% ):"glEvalPoint2"
glFeedbackBuffer( lsize%, ntype%, buffer* ):"glFeedbackBuffer"
glFinish( ):"glFinish"
glFlush( ):"glFlush"
glFogf( pname%, param# ):"glFogf"
glFogfv( pname%, params* ):"glFogfv"
glFogi( pname%, param% ):"glFogi"
glFogiv( pname%, params* ):"glFogiv"
glFrontFace( mode% ):"glFrontFace"
;glFrustum( nleft As Double, nright As Double, bottom As Double, top As Double, zNear As Double, zFar As Double ):"glFrustum"
glGenLists%( range% ):"glGenLists"
glGenTextures( n%, textures* ):"glGenTextures"
glGetBooleanv( pname%, params* ):"glGetBooleanv"
glGetClipPlane( plane%, equation* ):"glGetClipPlane"
glGetDoublev( pname%, params* ):"glGetDoublev"
glGetError%():"glGetError"
glGetFloatv( pname%, params* ):"glGetFloatv"
glGetIntegerv( pname%, params* ):"glGetIntegerv"
glGetLightfv( light%, pname%, params* ):"glGetLightfv"
glGetLightiv( light%, pname%, params* ):"glGetLightiv"
glGetMapdv( ntarget%, query%, v% ):"glGetMapdv"
glGetMapfv( ntarget%, query%, v% ):"glGetMapfv"
glGetMapiv( ntarget%, query%, v% ):"glGetMapiv"
glGetMaterialfv( face%, pname%, params* ):"glGetMaterialfv"
glGetMaterialiv( face%, pname%, params* ):"glGetMaterialiv"
glGetPixelMapfv( map%, values* ):"glGetPixelMapfv"
glGetPixelMapuiv( map%, values* ):"glGetPixelMapuiv"
glGetPixelMapusv( map%, values* ):"glGetPixelMapusv"
glGetPointerv( pname%, params* ):"glGetPointerv" ; ' pass a pointer To a bunch of Data( GLvoid* *params )
glGetPolygonStipple( mask% ):"glGetPolygonStipple"
glGetString$( nname% ):"glGetString"
glGetTexEnvfv( ntarget%, pname%, params* ):"glGetTexEnvfv"
glGetTexEnviv( ntarget%, pname%, params* ):"glGetTexEnviv"
glGetTexGendv( ncoord%, pname%, params* ):"glGetTexGendv"
glGetTexGenfv( ncoord%, pname%, params* ):"glGetTexGenfv"
glGetTexGeniv( ncoord%, pname%, params* ):"glGetTexGeniv"
glGetTexImage( ntarget%, level%, nformat%, ntype%, npixels* ):"glGetTexImage"
glGetTexLevelParameterfv( ntarget%, level%, pname%, params* ):"glGetTexLevelParameterfv"
glGetTexLevelParameteriv( ntarget%, level%, pname%, params* ):"glGetTexLevelParameteriv"
glGetTexParameterfv( ntarget%, pname%, params* ):"glGetTexParameterfv"
glGetTexParameteriv( ntarget%, pname%, params* ):"glGetTexParameteriv"
glHint( ntarget%, mode% ):"glHint"
glIndexMask( mask% ):"glIndexMask"
glIndexPointer( ntype%, stride%, Pointer* ):"glIndexPointer"
;glIndexd( c As Double ):"glIndexd"
;glIndexdv( c As Double ):"glIndexdv"
glIndexf( c# ):"glIndexf"
glIndexfv( c* ):"glIndexfv"
glIndexi( c% ):"glIndexi"
glIndexiv( c* ):"glIndexiv"
glIndexs( c% ):"glIndexs"
glIndexsv( c* ):"glIndexsv"
;glIndexub( c As Byte ):"glIndexub"
;glIndexubv( c As Byte ):"glIndexubv"
glInitNames( ):"glInitNames"
glInterleavedArrays( nformat%, stride%, Pointer* ):"glInterleavedArrays"
;glIsEnabled( cap% )As Byte
;Declare glIsList( list% )As Byte
;Declare glIsTexture( texture% )As Byte
glLightModelf( pname%, param# ):"glLightModelf"
glLightModelfv( pname%, params* ):"glLightModelfv"
glLightModeli( pname%, param% ):"glLightModeli"
glLightModeliv( pname%, params* ):"glLightModeliv"
glLightf( light%, pname%, param# ):"glLightf"
glLightfv( light%, pname%, params* ):"glLightfv"
glLighti( light%, pname%, param% ):"glLighti"
glLightiv( light%, pname%, params* ):"glLightiv"
;glLineStipple( factor%, pattern As Word ):"glLineStipple"
glLineWidth( nwidth# ):"glLineWidth"
glListBase( nbase% ):"glListBase"
glLoadIdentity( ):"glLoadIdentity"
glLoadMatrixd( m% ):"glLoadMatrixd"
glLoadMatrixf( m% ):"glLoadMatrixf"
glLoadName( nname% ):"glLoadName"
glLogicOp( opcode% ):"glLogicOp"
;glMap1d( ntarget%, u1 As Double, u2 As Double, stride%, order%, npoints% ):"glMap1d"
glMap1f( ntarget%, u1#, u2#, stride%, order%, points* ):"glMap1f"
;glMap2d( ntarget%, u1 As Double, u2 As Double, ustride%, uorder%, v1 As Double, v2 As Double, vstride%, vorder%, npoints% ):"glMap2d"
glMap2f( ntarget%, u1#, u2#, ustride%, uorder%, v1#, v2#, vstride%, vorder%, points* ):"glMap2f"
;glMapGrid1d( un%, u1 As Double, u2 As Double ):"glMapGrid1d"
glMapGrid1f( un%, u1#, u2# ):"glMapGrid1f"
;glMapGrid2d( un%, u1 As Double, u2 As Double, vn%, v1 As Double, v2 As Double ):"glMapGrid2d"
glMapGrid2f( un%, u1#, u2#, vn%, v1#, v2# ):"glMapGrid2f"
glMaterialf( face%, pname%, param# ):"glMaterialf"
glMaterialfv( face%, pname%, params* ):"glMaterialfv"
glMateriali( face%, pname%, param% ):"glMateriali"
glMaterialiv( face%, pname%, params* ):"glMaterialiv"
glMatrixMode( mode% ):"glMatrixMode"
glMultMatrixd( m% ):"glMultMatrixd"
glMultMatrixf( m% ):"glMultMatrixf"
glNewList( list%, mode% ):"glNewList"
;glNormal3b( nx As Byte, ny As Byte, nz As Byte ):"glNormal3b"
glNormal3bv( v% ):"glNormal3bv"
;glNormal3d( nx As Double, ny As Double, nz As Double ):"glNormal3d"
glNormal3dv( v% ):"glNormal3dv"
glNormal3f( nx#, ny#, nz# ):"glNormal3f"
glNormal3fv( v% ):"glNormal3fv"
glNormal3i( nx%, ny%, nz% ):"glNormal3i"
glNormal3iv( v% ):"glNormal3iv"
glNormal3s( nx%, ny%, nz% ):"glNormal3s"
glNormal3sv( v% ):"glNormal3sv"
glNormalPointer( ntype%, stride%, Pointer* ):"glNormalPointer"
blitz_glOrtho( nleft_l%, nleft_r%, nright_l%,nright_r%, bottom_l%,bottom_r%, top_l%,top_r%, zNear_l%,zNear_r%, zFar_l%,zFar_r% ):"glOrtho"
glPassThrough( token# ):"glPassThrough"
glPixelMapfv( map%, mapsize%, values* ):"glPixelMapfv"
glPixelMapuiv( map%, mapsize%, values* ):"glPixelMapuiv"
glPixelMapusv( map%, mapsize%, values* ):"glPixelMapusv"
glPixelStoref( pname%, param# ):"glPixelStoref"
glPixelStorei( pname%, param% ):"glPixelStorei"
glPixelTransferf( pname%, param# ):"glPixelTransferf"
glPixelTransferi( pname%, param% ):"glPixelTransferi"
glPixelZoom( xfactor#, yfactor# ):"glPixelZoom"
glPointSize( lsize# ):"glPointSize"
glPolygonMode( face%, mode% ):"glPolygonMode"
glPolygonOffset( factor#, nunits# ):"glPolygonOffset"
glPolygonStipple( mask% ):"glPolygonStipple"
glPopAttrib( ):"glPopAttrib"
glPopClientAttrib( ):"glPopClientAttrib"
glPopMatrix( ):"glPopMatrix"
glPopName( ):"glPopName"
glPrioritizeTextures( n%, textures%, priorities% ):"glPrioritizeTextures"
glPushAttrib( mask% ):"glPushAttrib"
glPushClientAttrib( mask% ):"glPushClientAttrib"
glPushMatrix( ):"glPushMatrix"
glPushName( nname% ):"glPushName"
;glRasterPos2d( x As Double, y As Double ):"glRasterPos2d"
glRasterPos2dv( v* ):"glRasterPos2dv"
glRasterPos2f( x#, y# ):"glRasterPos2f"
glRasterPos2fv( v* ):"glRasterPos2fv"
glRasterPos2i( x%, y% ):"glRasterPos2i"
glRasterPos2iv( v* ):"glRasterPos2iv"
glRasterPos2s( x%, y% ):"glRasterPos2s"
glRasterPos2sv( v% ):"glRasterPos2sv"
;glRasterPos3d( x As Double, y As Double, z As Double ):"glRasterPos3d"
glRasterPos3dv( v* ):"glRasterPos3dv"
glRasterPos3f( x#, y#, z# ):"glRasterPos3f"
glRasterPos3fv( v* ):"glRasterPos3fv"
glRasterPos3i( x%, y%, z% ):"glRasterPos3i"
glRasterPos3iv( v* ):"glRasterPos3iv"
glRasterPos3s( x%, y%, z% ):"glRasterPos3s"
glRasterPos3sv( v% ):"glRasterPos3sv"
;glRasterPos4d( x As Double, y As Double, z As Double, w As Double ):"glRasterPos4d"
glRasterPos4dv( v% ):"glRasterPos4dv"
glRasterPos4f( x#, y#, z#, w# ):"glRasterPos4f"
glRasterPos4fv( v* ):"glRasterPos4fv"
glRasterPos4i( x%, y%, z%, w% ):"glRasterPos4i"
glRasterPos4iv( v* ):"glRasterPos4iv"
glRasterPos4s( x%, y%, z%, w% ):"glRasterPos4s"
glRasterPos4sv( v* ):"glRasterPos4sv"
glReadBuffer( mode% ):"glReadBuffer"
glReadPixels( x%, y%, nwidth%, height%, format%, ntype%, npixels* ):"glReadPixels"
;glRectd( x1 As Double, y1 As Double, x2 As Double, y2 As Double ):"glRectd"
glRectdv( v1%, v2% ):"glRectdv"
glRectf( x1#, y1#, x2#, y2# ):"glRectf"
glRectfv( v1%, v2% ):"glRectfv"
glRecti( x1%, y1%, x2%, y2% ):"glRecti"
glRectiv( v1%, v2* ):"glRectiv"
glRects( x1%, y1%, x2%, y2% ):"glRects"
glRectsv( v1%, v2* ):"glRectsv"
glRenderMode%( mode% ):"glRenderMode"
;glRotated( angle As Double, x As Double, y As Double, z As Double ):"glRotated"
glRotatef( angle#, x#, y#, z# ):"glRotatef"
;glScaled( x As Double, y As Double, z As Double ):"glScaled"
glScalef( x#, y#, z# ):"glScalef"
glScissor( x%, y%, nwidth%, height% ):"glScissor"
glSelectBuffer( lsize%, buffer* ):"glSelectBuffer"
glShadeModel( mode% ):"glShadeModel"
glStencilFunc( func%, ref%, mask% ):"glStencilFunc"
glStencilMask( mask% ):"glStencilMask"
glStencilOp( fail%, zfail%, zpass% ):"glStencilOp"
;glTexCoord1d( s As Double ):"glTexCoord1d"
;glTexCoord1dv( v As Double ):"glTexCoord1dv"
glTexCoord1f( s# ):"glTexCoord1f"
glTexCoord1fv( v* ):"glTexCoord1fv"
glTexCoord1i( s% ):"glTexCoord1i"
glTexCoord1iv( v* ):"glTexCoord1iv"
glTexCoord1s( s% ):"glTexCoord1s"
glTexCoord1sv( v* ):"glTexCoord1sv"
;glTexCoord2d( s As Double, t As Double ):"glTexCoord2d"
glTexCoord2dv( v* ):"glTexCoord2dv"
glTexCoord2f( s#, t# ):"glTexCoord2f"
glTexCoord2fv( v* ):"glTexCoord2fv"
glTexCoord2i( s%, t% ):"glTexCoord2i"
glTexCoord2iv( v* ):"glTexCoord2iv"
glTexCoord2s( s%, t% ):"glTexCoord2s"
glTexCoord2sv( v* ):"glTexCoord2sv"
;glTexCoord3d( s As Double, t As Double, r As Double ):"glTexCoord3d"
glTexCoord3dv( v* ):"glTexCoord3dv"
glTexCoord3f( s#, t#, r# ):"glTexCoord3f"
glTexCoord3fv( v* ):"glTexCoord3fv"
glTexCoord3i( s%, t%, r% ):"glTexCoord3i"
glTexCoord3iv( v* ):"glTexCoord3iv"
glTexCoord3s( s%, t%, r% ):"glTexCoord3s"
glTexCoord3sv( v* ):"glTexCoord3sv"
;glTexCoord4d( s As Double, t As Double, r As Double, q As Double ):"glTexCoord4d"
glTexCoord4dv( v* ):"glTexCoord4dv"
glTexCoord4f( s#, t#, r#, q# ):"glTexCoord4f"
glTexCoord4fv( v* ):"glTexCoord4fv"
glTexCoord4i( s%, t%, r%, q% ):"glTexCoord4i"
glTexCoord4iv( v* ):"glTexCoord4iv"
glTexCoord4s( s%, t%, r%, q% ):"glTexCoord4s"
glTexCoord4sv( v* ):"glTexCoord4sv"
glTexCoordPointer( lsize%, ntype%, stride%, Pointer% ):"glTexCoordPointer"
glTexEnvf( ntarget%, pname%, param# ):"glTexEnvf"
glTexEnvfv( ntarget%, pname%, params* ):"glTexEnvfv"
glTexEnvi( ntarget%, pname%, param% ):"glTexEnvi"
glTexEnviv( ntarget%, pname%, params* ):"glTexEnviv"
;glTexGend( ncoord%, pname%, param As Double ):"glTexGend"
glTexGendv( ncoord%, pname%, params* ):"glTexGendv"
glTexGenf( ncoord%, pname%, param# ):"glTexGenf"
glTexGenfv( ncoord%, pname%, params* ):"glTexGenfv"
glTexGeni( ncoord%, pname%, param% ):"glTexGeni"
glTexGeniv( ncoord%, pname%, params* ):"glTexGeniv"
glTexImage1D( ntarget%, level%, internalformat%, nwidth%, border%, format%, ntype%, npixels* ):"glTexImage1D"
glTexImage2D( ntarget%, level%, internalformat%, nwidth%, height%, border%, format%, ntype%, npixels* ):"glTexImage2D"
glTexParameterf( ntarget%, pname%, param# ):"glTexParameterf"
glTexParameterfv( ntarget%, pname%, params* ):"glTexParameterfv"
glTexParameteri( ntarget%, pname%, param% ):"glTexParameteri"
glTexParameteriv( ntarget%, pname%, params* ):"glTexParameteriv"
glTexSubImage1D( ntarget%, level%, xoffset%, nwidth%, format%, ntype%, npixels* ):"glTexSubImage1D"
glTexSubImage2D( ntarget%, level%, xoffset%, yoffset%, nwidth%, height%, format%, ntype%, npixels* ):"glTexSubImage2D"
;glTranslated( x As Double, y As Double, z As Double ):"glTranslated"
glTranslatef( x#, y#, z# ):"glTranslatef"
;glVertex2d( x As Double, y As Double ):"glVertex2d"
glVertex2dv( v% ):"glVertex2dv"
glVertex2f( x#, y# ):"glVertex2f"
glVertex2fv( v* ):"glVertex2fv"
glVertex2i( x%, y% ):"glVertex2i"
glVertex2iv( v* ):"glVertex2iv"
glVertex2s( x%, y% ):"glVertex2s"
glVertex2sv( v* ):"glVertex2sv"
;glVertex3d( x As Double, y As Double, z As Double ):"glVertex3d"
glVertex3dv( v% ):"glVertex3dv"
glVertex3f( x#, y#, z# ):"glVertex3f"
glVertex3fv( v* ):"glVertex3fv"
glVertex3i( x%, y%, z% ):"glVertex3i"
glVertex3iv( v* ):"glVertex3iv"
glVertex3s( x%, y%, z% ):"glVertex3s"
glVertex3sv( v* ):"glVertex3sv"
;glVertex4d( x As Double, y As Double, z As Double, w As Double ):"glVertex4d"
glVertex4dv( v* ):"glVertex4dv"
glVertex4f( x#, y#, z#, w# ):"glVertex4f"
glVertex4fv( v* ):"glVertex4fv"
glVertex4i( x%, y%, z%, w% ):"glVertex4i"
glVertex4iv( v* ):"glVertex4iv"
glVertex4s( x%, y%, z%, w% ):"glVertex4s"
glVertex4sv( v* ):"glVertex4sv"
glVertexPointer( lsize%, ntype%, stride%, Pointer* ):"glVertexPointer"
glViewport( x%, y%, nwidth%, height% ):"glViewport"